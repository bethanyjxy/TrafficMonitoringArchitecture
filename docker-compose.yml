services:
  flask-app:
    build: ./app  # Assuming the Dockerfile is in the app folder
    container_name: flaskapp
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app 
    environment:
      FLASK_ENV: development
      POSTGRES_DB: traffic_db
      POSTGRES_USER: traffic_admin
      POSTGRES_PASSWORD: traffic_pass
    depends_on:
      - postgres
      - kafka
      - namenode
      - datanode
  

  postgres:
    image: postgis/postgis:16-3.4
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: traffic_db
      POSTGRES_USER: traffic_admin
      POSTGRES_PASSWORD: traffic_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data



  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-namenode
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - CORE_CONF_hadoop_http_staticuser_user=root
      - HDFS_CONF_dfs_replication=1
    volumes:
      - namenode-data:/hadoop/dfs/name
    ports:
      - "9870:9870"
      - "9000:9000"
    networks:
      - hadoop-network

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - CORE_CONF_hadoop_http_staticuser_user=root
      - HDFS_CONF_dfs_replication=1
    volumes:
      - datanode-data:/hadoop/dfs/data
    depends_on:
      - namenode
    networks:
      - hadoop-network

  spark:
    container_name: spark
    image: bitnami/spark:latest
    ports:
      - "8080:8080"  # Spark UI
      - "7077:7077"  # Spark master port
    environment:
      - SPARK_MODE=master
    volumes:
      - ./spark-data:/opt/spark/data
    depends_on:
      - kafka

  airflow:
    container_name: airflow
    image: apache/airflow:latest
    ports:
      - "8081:8081"
    environment:
      LOAD_EX: "y"
      EXECUTOR: "LocalExecutor"
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./logs:/usr/local/airflow/logs
    depends_on:
      - postgres

networks:
  hadoop-network:
    driver: bridge

  kafka_network:
    driver: bridge

volumes:
  postgres_data: {}
  namenode-data:
  datanode-data:
